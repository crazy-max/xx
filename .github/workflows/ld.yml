name: ld

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
    paths:
      - '.github/workflows/ld.yml'
      - 'src/ld/**'
  pull_request:
    paths:
      - '.github/workflows/ld.yml'
      - 'src/ld/**'

env:
  BUILDX_VERSION: latest

jobs:
  ld64:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          files: |
            ./docker-bake.hcl
          targets: ld64-tgz

  binutils-targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.targets.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver: docker
      -
        name: Create targets matrix
        id: targets
        run: |
          matrix=$(docker buildx bake binutils --print | jq -cr '.group.binutils.targets')
          echo "matrix=${matrix}" >> ${GITHUB_OUTPUT}
      -
        name: Show matrix
        run: |
          echo ${{ steps.targets.outputs.matrix }}

  binutils:
    runs-on: ubuntu-latest
    needs:
      - binutils-targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.binutils-targets.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          targets: ${{ matrix.target }}
          set: |
            *.cache-from=type=gha,scope=${{ matrix.target }}
            *.cache-to=type=gha,scope=${{ matrix.target }}

  ld-targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.targets.outputs.matrix }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
          driver: docker
      -
        name: Create targets matrix
        id: targets
        run: |
          matrix=$(docker buildx bake ld-static-tgz --print | jq -cr '.group."ld-static-tgz".targets')
          echo "matrix=${matrix}" >> ${GITHUB_OUTPUT}
      -
        name: Show matrix
        run: |
          echo ${{ steps.targets.outputs.matrix }}

  ld:
    runs-on: ubuntu-latest
    needs:
      - ld-targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJson(needs.ld-targets.outputs.matrix) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ env.BUILDX_VERSION }}
      -
        name: Build
        uses: docker/bake-action@v2
        with:
          targets: ${{ matrix.target }}
          set: |
            *.cache-from=type=gha,scope=${{ matrix.target }}
            *.cache-to=type=gha,scope=${{ matrix.target }}
